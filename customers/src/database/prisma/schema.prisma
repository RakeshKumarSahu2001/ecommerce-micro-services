// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  USER
}

enum Register {
  GOOGLE
  EMAIL
  GITHUB
}

enum Gender {
  Male
  Female
  Other
}

model Address {
  id         String  @id @unique @default(uuid())
  street     String?
  city       String?
  state      String?
  country    String?
  postalCode String?

  auth   Auth?   @relation(fields: [authId], references: [id])
  authId String? @unique
}

model Orders {
  id           String   @id @unique @default(uuid())
  amount       Int?
  orderDate    DateTime
  deliveryDate DateTime

  auth   Auth?   @relation(fields: [authId], references: [id])
  authId String? @unique
}

model Product {
  id     String  @id @unique @default(uuid())
  name   String?
  thumbnailImage String?
  price  Int?

  auth   Auth?   @relation(fields: [authId], references: [id])
  authId String? @unique
}

model Auth {
  id                String    @id @unique @default(uuid())
  firebaseUid       String?   @unique
  name              String?
  email             String    @unique
  password          String?
  phone             String?
  address           Address[]
  orders            Orders[]
  cart              Product[]
  dateOfBirth       DateTime?
  gender            Gender?
  refreshToken      String?
  verifyOTP         Int?
  verifyOTPExpireAt DateTime?
  isAccountVerified Boolean   @default(false)
  role              Role      @default(USER)
  registeredWith    Register  @default(EMAIL)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}
